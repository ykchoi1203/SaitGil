/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2019-08-12 05:19:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class invitationPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>커플연동</title>\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script>\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css?family=Noto+Serif+KR&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("    \r\n");
      out.write("    \tbody {\r\n");
      out.write("\t\t\tbackground-image: url(\"../../resources/images/mainImage.jpg\");\r\n");
      out.write("\t\t\tbackground-position: center;\r\n");
      out.write("\t\t\tbackground-size: cover;\r\n");
      out.write("\t\t\tbackground-repeat: no-repeat;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("        #outline {\r\n");
      out.write("            width: 60%;\r\n");
      out.write("            height: 100%;\r\n");
      out.write("            overflow: visible;\r\n");
      out.write("            border: none;\r\n");
      out.write("            margin: auto;\r\n");
      out.write("            margin-top:100px;\r\n");
      out.write("            background:white;\r\n");
      out.write("            padding:60px;\r\n");
      out.write("            opacity: 0.96;\r\n");
      out.write("\r\n");
      out.write("        }    \r\n");
      out.write("\r\n");
      out.write("        h1 {\r\n");
      out.write("\t\t\tfont-family:Noto Serif KR;\r\n");
      out.write("\t\t\tcolor: #e23a6e;\r\n");
      out.write("\t\t} \r\n");
      out.write("\r\n");
      out.write("        .way {\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            font-family:Noto Serif KR;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            background: #fde8ee ;\r\n");
      out.write("            height: 170px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .button {\r\n");
      out.write("            display: inline-block;\r\n");
      out.write("            width:80px;\r\n");
      out.write("            height: 15px;\r\n");
      out.write("            background: #fa96b5;\r\n");
      out.write("            color: #fff;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 12px;\r\n");
      out.write("            font-family: Noto Serif KR;\r\n");
      out.write("            font-weight: 100;\r\n");
      out.write("            padding:10px;\r\n");
      out.write("            cursor:pointer;\r\n");
      out.write("            border-radius:4px;\r\n");
      out.write("            margin-right:0px;\r\n");
      out.write("            \r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .button:hover {\r\n");
      out.write("        \tbackground: #e23a6e ;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        \r\n");
      out.write("        #mainBtn {\r\n");
      out.write("        \tmargin-right:0px;\r\n");
      out.write("            width:100px;\r\n");
      out.write("            height: 25px;\r\n");
      out.write("            background: #fa96b5;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            font-family: Noto Serif KR;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("            padding:10px;\r\n");
      out.write("            cursor:pointer;\r\n");
      out.write("            border-radius:4px;\r\n");
      out.write("            margin-right:0px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        #mainBtn:hover {\r\n");
      out.write("        \tbackground: #e23a6e ;        \r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input {\r\n");
      out.write("            height: 25px;\r\n");
      out.write("            font-size: 13pt;\r\n");
      out.write("\t\t    font-weight: 300;\r\n");
      out.write("            line-height: 1.65;\r\n");
      out.write("\t\t\tmargin:5px;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("    \t\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"outline\">\r\n");
      out.write("        <h1>현재 연동된 커플이 없습니다. <br>\r\n");
      out.write("            함께 사잇길을 걸을 연인을 추가해주세요. </h1>\r\n");
      out.write("        <hr>\r\n");
      out.write("        <br>\r\n");
      out.write("        <div class=\"way\">\r\n");
      out.write("            <p><b>방법 1. </b><br>\r\n");
      out.write("            아직 초대코드를 못받으셨나요? <br> \r\n");
      out.write("            연인에게 사랑이 담긴 초대코드를 보내보세요. <br>\r\n");
      out.write("            내 연인이 초대코드를 입력한다면 둘만의 사잇길이 펼쳐집니다!</p>\r\n");
      out.write("\r\n");
      out.write("            연인의 전화번호 : <input type=\"text\" id=\"partnerPhone\"> \r\n");
      out.write("            <div class=\"button\">초대코드 발송</div> \r\n");
      out.write("            <br>\r\n");
      out.write("        </div>\r\n");
      out.write("        <br><br>\r\n");
      out.write("        <div class=\"way\">\r\n");
      out.write("            <p><b>방법 2.</b> <br>\r\n");
      out.write("            연인이 보낸 초대코드를 받으셨나요? <br>\r\n");
      out.write("            받으신 초대코드를 입력하세요. 지금부터 둘만의 사잇길이 펼쳐집니다!</p>\r\n");
      out.write("\r\n");
      out.write("            초대코드 : <input type=\"text\" id=\"invitationCode\"> \r\n");
      out.write("            <div class=\"button\">연동하기</div>\r\n");
      out.write("        </div>\r\n");
      out.write("    \t<br><br>\r\n");
      out.write("\t  \t  <div id=\"mainBtn\" onclick=\"goMain()\">메인으로</div>\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("    \tfunction goMain() {\r\n");
      out.write("    \t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("\"; \t\r\n");
      out.write("    \t}\r\n");
      out.write("    </script>\r\n");
      out.write("    <br><br><br><br><br> \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
